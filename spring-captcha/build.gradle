group 'com.vansteve911'
version '0.1.2'

apply plugin: 'java'
apply plugin: "maven-publish"
apply plugin: 'jacoco'

ext {
    springBootVersion = '2.0.0.RELEASE'
}

sourceCompatibility = 1.8

repositories {
    maven {
        allowInsecureProtocol true
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: rootProject.ext.springBootVersion
    implementation('com.google.guava:guava:24.0-jre')
    implementation('com.aliyun:aliyun-java-sdk-dysmsapi:1.0.0')
    implementation('com.aliyun:aliyun-java-sdk-core:3.3.1')
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: rootProject.ext.springBootVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: rootProject.ext.springBootVersion
    testImplementation 'org.mockito:mockito-core:2.17.0'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

if (project.hasProperty('release')) {

    apply plugin: 'signing'

    signing {
        sign configurations.archives
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: mavenUser, password: mavenPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: mavenUser, password: mavenPassword)
                }

                pom.project {
                    name 'springboot-captcha'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'A SpringBoot based mobile/image captcha tool.'
                    url 'https://github.com/vansteve911/springboot-captcha'

                    scm {
                        connection 'scm:git:https://github.com/vansteve911/springboot-captcha.git'
                        developerConnection 'scm:git:git@github.com:vansteve911/springboot-captcha.git'
                        url 'https://github.com/vansteve911/springboot-captcha/tree/master'
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'vansteve911'
                            name 'Steve Van'
                            email 'vansteve911@gmail.com'
                        }
                    }
                }
            }
        }
    }
}